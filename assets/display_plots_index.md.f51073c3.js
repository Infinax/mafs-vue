import{N as i,X as A,z as h,H as g,E as d,S as m,g as f,P as _,h as b,Y as x}from"./chunks/index.3c45ee81.js";import{d as y,a as F,c as C,w as o,b as n,u as t,h as E,l as q,e as v,g as s,i as l,f as D}from"./chunks/framework.ab10dd6e.js";import{c as M}from"./chunks/clamp.4250cf37.js";import"./chunks/toNumber.4137c702.js";const k=y({__name:"OfXAndY",setup(u){const p=c=>2/(1+Math.exp(-c))-1;return(c,a)=>(F(),C(t(d),{height:300},{default:o(()=>[n(t(i)),n(t(h),{y:Math.sin,stroked:{color:t(A).blue}},null,8,["y","stroked"]),n(t(g),{x:p,stroked:{color:t(A).pink}},null,8,["stroked"])]),_:1}))}}),P=y({__name:"Inequalities",setup(u){const p=m([0,-1]);return(c,a)=>(F(),C(t(d),{height:300},{default:o(()=>[n(t(i)),n(t(f),{x:{"<=":e=>Math.cos(e+t(p).point[1])-t(p).point[0],">":e=>Math.sin(e-t(p).point[1])+t(p).point[0]},color:t(A).blue},null,8,["x","color"]),n(t(f),{y:{"<=":e=>Math.cos(e+t(p).point[0])-t(p).point[1],">":e=>Math.sin(e-t(p).point[0])+t(p).point[1]},color:t(A).pink},null,8,["y","color"]),n(t(_),{ctx:t(p)},null,8,["ctx"])]),_:1}))}}),w=y({__name:"TwistyBoi",setup(u){const p=m([.5,0],{constrain:([a])=>[M(a,-1,1),0]}),c=E(()=>p.point[0]*25*Math.PI);return(a,e)=>(F(),C(t(d),{height:300,viewBox:{x:[-1,1],y:[-1,1]}},{default:o(()=>[n(t(i),{subdivisions:4}),n(t(b),{t:[0,c.value],xy:r=>[Math.cos(r),r/c.value*Math.sin(r)]},null,8,["t","xy"]),n(t(_),{ctx:t(p)},null,8,["ctx"])]),_:1}))}}),S=y({__name:"VectorField",setup(u){const p=m([.6,.6]);return(c,a)=>(F(),C(t(d),null,{default:o(()=>[n(t(i),{subdivisions:2}),n(t(x),{xy:([e,r])=>[r-t(p).point[1]-(e-t(p).point[0]),-(e-t(p).point[0])-(r-t(p).point[1])],step:.5,xyOpacity:([e,r])=>(Math.abs(e)+Math.abs(r))/10},null,8,["xy","xyOpacity"]),n(t(_),{ctx:t(p)},null,8,["ctx"])]),_:1}))}}),O=y({__name:"SineStressTest",setup(u){const p=c=>Math.sin(1/c);return(c,a)=>(F(),C(t(d),{height:300,viewBox:{x:[-1/32,1/32],y:[-3.5,3.5],padding:0},preserveAspectRatio:!1},{default:o(()=>[n(t(i)),n(t(h),{y:e=>p(e)+1.5},null,8,["y"]),n(t(h),{y:e=>p(e)-1.5,minSamplingDepth:15},null,8,["y"])]),_:1}))}}),T=s("h1",{id:"plots",tabindex:"-1"},[l("Plots "),s("a",{class:"header-anchor",href:"#plots","aria-label":'Permalink to "Plots"'},"​")],-1),V=s("p",null,"Mafs supports numerically plotting a number of function types by passing in plain JavaScript functions.",-1),X=s("h2",{id:"functions-of-x-and-y",tabindex:"-1"},[l("Functions of "),s("em",null,"x"),l(" and "),s("em",null,"y"),l(),s("a",{class:"header-anchor",href:"#functions-of-x-and-y","aria-label":'Permalink to "Functions of *x* and *y*"'},"​")],-1),B=D(`<details class="details custom-block"><summary>Code</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Mafs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">OfX</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">OfY</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Theme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mafs-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sigmoid1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">x)) </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Cartesian</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">OfX</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:y</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Math.sin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:stroked</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ color: Theme.blue }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">OfY</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:x</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sigmoid1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:stroked</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ color: Theme.pink }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details>`,1),N=s("strong",null,"Props",-1),Y=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Description"),s("th",null,"Default")])],-1),I=s("td",null,[s("strong",null,"y")],-1),$=s("td",null,[s("strong",null,"minSampleDepth")],-1),H=s("p",null,"The mininum recursive depth of the sampling algorithm.",-1),R=s("td",null,[s("strong",null,"maxSampleDepth")],-1),z=s("p",null,"The mininum recursive depth of the sampling algorithm.",-1),J=s("td",null,[s("strong",null,"stroked")],-1),W=s("strong",null,"Props",-1),L=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Description"),s("th",null,"Default")])],-1),j=s("td",null,[s("strong",null,"x")],-1),G=s("td",null,[s("strong",null,"minSampleDepth")],-1),K=s("p",null,"The mininum recursive depth of the sampling algorithm.",-1),Q=s("td",null,[s("strong",null,"maxSampleDepth")],-1),U=s("p",null,"The mininum recursive depth of the sampling algorithm.",-1),Z=s("td",null,[s("strong",null,"stroked")],-1),ss=D('<p><strong>stroked</strong> is the same as <a href="/infinax/display/lines/#stokedprops">Lines</a></p><h2 id="inequalities-of-x-and-y" tabindex="-1">Inequalities of <em>x</em> and <em>y</em> <a class="header-anchor" href="#inequalities-of-x-and-y" aria-label="Permalink to &quot;Inequalities of *x* and *y*&quot;">​</a></h2><p>Inequalities represent the region less than or greater than one or two functions. Mafs allows you to plot the region between two functions, or a function and a constant. The inequality can be a function of <em>x</em> or <em>y</em>.</p><p>You cannot provide an <code>x</code> and a <code>y</code> prop to Inequality—it will throw a runtime exception. Similarly, you cannot pass conflicting inequality operators—like both <code>&lt;</code> <em>and</em> <code>≤</code>.</p>',4),ls=D(`<details class="details custom-block"><summary>Code</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Mafs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Inequality</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MovablePoint</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Theme</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useMovablePoint</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mafs-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> point </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useMovablePoint</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Cartesian</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Inequality</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:x</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#C3E88D;">            &#39;&lt;=&#39;: (y) =&gt; Math.cos(y + point.point[1]) - point.point[0],</span></span>
<span class="line"><span style="color:#C3E88D;">            &#39;&gt;&#39;: (y) =&gt; Math.sin(y - point.point[1]) + point.point[0]</span></span>
<span class="line"><span style="color:#C3E88D;">        }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:color</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Theme.blue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Inequality</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:y</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#C3E88D;">            &#39;&lt;=&#39;: (x) =&gt; Math.cos(x + point.point[0]) - point.point[1],</span></span>
<span class="line"><span style="color:#C3E88D;">            &#39;&gt;&#39;: (x) =&gt; Math.sin(x - point.point[0]) + point.point[1]</span></span>
<span class="line"><span style="color:#C3E88D;">        }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:color</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Theme.pink</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MovablePoint</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:ctx</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">point</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details>`,1),ns=s("strong",null,"Props",-1),as=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Description"),s("th",null,"Default")])],-1),os=s("td",null,[s("strong",null,"x")],-1),ts=s("td",null,[s("strong",null,"y")],-1),ps=s("td",null,[s("strong",null,"color")],-1),es=s("td",null,[s("strong",null,"weight")],-1),cs=s("td",null,[s("strong",null,"strokeColor")],-1),rs=s("td",null,[s("strong",null,"strokeOpacity")],-1),Ds=s("td",null,[s("strong",null,"fillColor")],-1),ys=s("td",null,[s("strong",null,"fillOpacity")],-1),Fs=s("td",null,[s("strong",null,"minSampleDepth")],-1),us=s("td",null,[s("strong",null,"maxSampleDepth")],-1),is=s("td",null,[s("strong",null,"upperColor")],-1),ds=s("td",null,[s("strong",null,"upperOpacity")],-1),Cs=s("td",null,[s("strong",null,"upperWeight")],-1),As=s("td",null,[s("strong",null,"lowerColor")],-1),hs=s("td",null,[s("strong",null,"lowerOpacity")],-1),ms=s("td",null,[s("strong",null,"lowerWeight")],-1),_s=s("h2",{id:"parametric-functions",tabindex:"-1"},[l("Parametric functions "),s("a",{class:"header-anchor",href:"#parametric-functions","aria-label":'Permalink to "Parametric functions"'},"​")],-1),fs=D(`<details class="details custom-block"><summary>Code</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Mafs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Parametric</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MovablePoint</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useMovablePoint</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mafs-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">computed</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> clamp </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lodash/clamp</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> point </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useMovablePoint</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">constrain</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">([</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">])</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> [</span><span style="color:#82AAFF;">clamp</span><span style="color:#A6ACCD;">(x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> point</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">point[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PI)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:viewBox</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ x: [-1, 1], y: [-1, 1] }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Cartesian</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:subdivisions</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">4</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Parametric</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:t</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[0, k]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:xy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(t) =&gt; [Math.cos(t), (t / k) * Math.sin(t)]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MovablePoint</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:ctx</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">point</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details>`,1),gs=s("strong",null,"Props",-1),bs=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Description"),s("th",null,"Default")])],-1),xs=s("td",null,[s("strong",null,"xy")],-1),Es=s("p",null,[l("A function that takes a "),s("code",null,"t"),l(" value and returns a point.")],-1),qs=s("td",null,[s("strong",null,"t")],-1),vs=s("p",null,[l("The domain "),s("code",null,"t"),l(" between which to evaluate "),s("code",null,"xy"),l(".")],-1),Ms=s("td",null,[s("strong",null,"minSampleDepth")],-1),ks=s("p",null,"The minimum recursive depth of the sampling algorithm.",-1),Ps=s("td",null,[s("strong",null,"maxSampleDepth")],-1),ws=s("p",null,"The maximum recursive depth of the sampling algorithm.",-1),Ss=s("td",null,[s("strong",null,"stroked")],-1),Os=s("h2",{id:"vector-fields",tabindex:"-1"},[l("Vector fields "),s("a",{class:"header-anchor",href:"#vector-fields","aria-label":'Permalink to "Vector fields"'},"​")],-1),Ts=s("p",null,[l("Vector fields take a function that is passed a point "),s("code",null,"[x, y]"),l(" and returns a vector at that point. Vectors are then artificially scaled down (for legibility) and plotted on the coordinate plane. You must also pass a "),s("code",null,"step"),l(" to indicate how dense the vector field is.")],-1),Vs=D(`<details class="details custom-block"><summary>Code</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Mafs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VectorField</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MovablePoint</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useMovablePoint</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mafs-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useMovablePoint</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">0.6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.6</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Cartesian</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:subdivisions</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VectorField</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:xy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">([x, y]) =&gt; [</span></span>
<span class="line"><span style="color:#C3E88D;">                y - a.point[1] - (x - a.point[0]),</span></span>
<span class="line"><span style="color:#C3E88D;">                -(x - a.point[0]) - (y - a.point[1])</span></span>
<span class="line"><span style="color:#C3E88D;">            ]</span></span>
<span class="line"><span style="color:#C3E88D;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:step</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:xyOpacity</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">([x, y]) =&gt; (Math.abs(x) + Math.abs(y)) / 10</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MovablePoint</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:ctx</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details>`,1),Xs=s("strong",null,"Props",-1),Bs=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Description"),s("th",null,"Default")])],-1),Ns=s("td",null,[s("strong",null,"xy")],-1),Ys=s("td",null,[s("strong",null,"xOpacity")],-1),Is=s("td",null,[s("strong",null,"step")],-1),$s=s("td",null,[s("strong",null,"Opacitystep")],-1),Hs=s("td",null,[s("strong",null,"color")],-1),Rs=D('<h2 id="render-quality" tabindex="-1">Render quality <a class="header-anchor" href="#render-quality" aria-label="Permalink to &quot;Render quality&quot;">​</a></h2><h3 id="function-sampling" tabindex="-1">Function sampling <a class="header-anchor" href="#function-sampling" aria-label="Permalink to &quot;Function sampling&quot;">​</a></h3><p><code>OfX</code>, <code>OfY</code>, and <code>Parametric</code> use numerical methods for evaluating a function and attempting to plot it accurately. The approach works well for most functions, but it&#39;s far from perfect.</p><p>Mafs samples functions by by recursively subdividing the domain until an estimated error threshold is met (or the recursion limit limit is reached).</p><h4 id="sampling-depth" tabindex="-1">Sampling depth <a class="header-anchor" href="#sampling-depth" aria-label="Permalink to &quot;Sampling depth&quot;">​</a></h4><p>To force more subdivisions (and therefore improve quality), the <code>minSamplingDepth</code> and <code>maxSamplingDepth</code> props can be tuned. Increasing <code>minSamplingDepth</code> can help when you want to ensure more subdivisions and improve accuracy, and lowering <code>maxSamplingDepth</code> can help improve performance. These two props should be tuned to meet your needs.</p><p>Here&#39;s an example of a common &quot;stress test&quot; function for plotters, sin(1/x). The top plot has the default sampling depths, while the bottom has <code>minSamplingDepth</code> increased to <code>15</code>. Neither approach is perfect, but the bottom render is indistinguishable from a perfect plot.</p>',7),zs=D(`<details class="details custom-block"><summary>Code</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Mafs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">OfX</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mafs-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sin</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> x)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:viewBox</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ x: [-1 / 32, 1 / 32], y: [-3.5, 3.5], padding: 0 }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:preserveAspectRatio</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Cartesian</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">OfX</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:y</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(x) =&gt; fn(x) + 1.5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">OfX</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:y</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(x) =&gt; fn(x) - 1.5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:minSamplingDepth</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">15</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Mafs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details><h3 id="vector-fields-1" tabindex="-1">Vector fields <a class="header-anchor" href="#vector-fields-1" aria-label="Permalink to &quot;Vector fields&quot;">​</a></h3><p>Vector field rendering quality can be tuned with the <code>step</code> prop. This declares the spacing between arrows, so lowering it will decrease performance.</p>`,3),Ks=JSON.parse('{"title":"Plots","description":"","frontmatter":{},"headers":[],"relativePath":"display/plots/index.md","filePath":"display/plots/index.md"}'),Js={name:"display/plots/index.md"},Qs=y({...Js,setup(u){return(p,c)=>{const a=q("w");return F(),v("div",null,[T,V,X,n(k),B,s("p",null,[N,l(),n(a,null,{default:o(()=>[l("<OfX ... />")]),_:1})]),s("table",null,[Y,s("tbody",null,[s("tr",null,[I,s("td",null,[n(a,null,{default:o(()=>[l("(x: number) => number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[$,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),H]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[R,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),z]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[J,s("td",null,[n(a,null,{default:o(()=>[l("StokedProps")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])])])]),s("p",null,[W,l(),n(a,null,{default:o(()=>[l("<OfY ... />")]),_:1})]),s("table",null,[L,s("tbody",null,[s("tr",null,[j,s("td",null,[n(a,null,{default:o(()=>[l("(y: number) => number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[G,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),K]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[Q,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),U]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[Z,s("td",null,[n(a,null,{default:o(()=>[l("StokedProps")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])])])]),ss,n(P),ls,s("p",null,[ns,l(),n(a,null,{default:o(()=>[l("<Inequality ... />")]),_:1})]),s("table",null,[as,s("tbody",null,[s("tr",null,[os,s("td",null,[n(a,null,{default:o(()=>[l('{ ">"?: FnX; "<="?: FnX; "<"?: FnX | undefined; ">="?: FnX | undefined; } | undefined')]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[ts,s("td",null,[n(a,null,{default:o(()=>[l('{ ">"?: FnY; "<="?: FnY; "<"?: FnY | undefined; ">="?: FnY | undefined; } | undefined')]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[ps,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])]),s("tr",null,[es,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("2")]),_:1})])]),s("tr",null,[cs,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])]),s("tr",null,[rs,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("1")]),_:1})])]),s("tr",null,[Ds,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])]),s("tr",null,[ys,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("0.15")]),_:1})])]),s("tr",null,[Fs,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("10")]),_:1})])]),s("tr",null,[us,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("14")]),_:1})])]),s("tr",null,[is,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])]),s("tr",null,[ds,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("1")]),_:1})])]),s("tr",null,[Cs,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("2")]),_:1})])]),s("tr",null,[As,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])]),s("tr",null,[hs,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("1")]),_:1})])]),s("tr",null,[ms,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("2")]),_:1})])])])]),_s,n(w),fs,s("p",null,[gs,l(),n(a,null,{default:o(()=>[l("<Parametric ... />")]),_:1})]),s("table",null,[bs,s("tbody",null,[s("tr",null,[xs,s("td",null,[n(a,null,{default:o(()=>[l("(t: number) => vector2")]),_:1}),l(),Es]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[qs,s("td",null,[n(a,null,{default:o(()=>[l("vector2")]),_:1}),l(),vs]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[Ms,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),l(),ks]),s("td",null,[n(a,null,{default:o(()=>[l("8")]),_:1})])]),s("tr",null,[Ps,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1}),l(),ws]),s("td",null,[n(a,null,{default:o(()=>[l("14")]),_:1})])]),s("tr",null,[Ss,s("td",null,[n(a,null,{default:o(()=>[l("StokedProps")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])])])]),Os,Ts,n(S),Vs,s("p",null,[Xs,l(),n(a,null,{default:o(()=>[l("<VectorField ... />")]),_:1})]),s("table",null,[Bs,s("tbody",null,[s("tr",null,[Ns,s("td",null,[n(a,null,{default:o(()=>[l("(point: vector2) => vector2")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("—")]),_:1})])]),s("tr",null,[Ys,s("td",null,[n(a,null,{default:o(()=>[l("(point: vector2) => number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("() => 1")]),_:1})])]),s("tr",null,[Is,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("1")]),_:1})])]),s("tr",null,[$s,s("td",null,[n(a,null,{default:o(()=>[l("number")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("xyOpacity === xyOpacityDefault ? 1 : 0.2")]),_:1})])]),s("tr",null,[Hs,s("td",null,[n(a,null,{default:o(()=>[l("string")]),_:1})]),s("td",null,[n(a,null,{default:o(()=>[l("var(--mafs-fg)")]),_:1})])])])]),Rs,n(O),zs])}}});export{Ks as __pageData,Qs as default};
